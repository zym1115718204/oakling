#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Created on $CREATE_TIME
# Project: $PROJECTS_NAME

from libs.basespider.basespider import *


class Spider(BaseSpider):
    """
    Spider Generator
    """

    def start_generator(self):
        """
        Start Generator
        :return: URL List
        :example: [{"url":"http://www.example.com", "args":{}, "callback":"parser_detail"}]
        """
        result = []

        start_url = "$START_URL"
        result_url = self.generate(start_url, callback=self.parser_index)
        result.append(result_url)

        return result

    def start_downloader(self, url, args):
        """
        Start Downloader
        """
        resp = self.download(url, args)
        return resp

    def start_parser(self, response, callback):
        """
        Start Parser
        """
        result = callback(response)

        return result

    def parser_index(self, response):
        """
        Parser Index Page to Result
        :param response:
        :return: dict
        """
        urls = []
        for each in response.doc('a[href^="http"]').items():
            _url = self.generate(each.attr.href, callback=self.parser_detail)
            if _url not in urls:
                urls.append(_url)

        result = {
            "urls": urls
        }
        return result

    def parser_detail(self, response):
        """
        Parser Detail Page to Result
        :param response:
        :return: dict
        """
        result = {
            "url": response.url,
            "title": response.doc('title').text(),
        }
        return result